

	***THIS IS PSEUDOCODE FOR THE PLAYERMOVEMENTS***

// Arguement Class Function () {<-openBracket.
	// if the player presses right. {<-openBracket.


		// move to the right at set speed.


	}<-closing Bracket.
	// otherwise if the player pressed left {<-openBracket.


		// move to the left at set speed.


	}<-closing Bracket.
	// otherwise if the player pressed Up. {<-openBracket.


		// move to the Up at set speed.

	
	}<-closing Bracket.
	// otherwise if the player pressed Down. {<-openBracket.


		// move to the Down at set speed.

		
	}<-closing Bracket.
	// Return the Position.
}
*************************************************************************
if (mInput->KeyDown(SDL_SCANCODE_RIGHT) && !left) {


		Translate(Vec2_Right * mMoveSpeed * mTimer->DeltaTime(), World);


	}
	else if (mInput->KeyDown(SDL_SCANCODE_LEFT) && !right) {


		Translate(-Vec2_Right * mMoveSpeed * mTimer->DeltaTime(), World);



	}
	else if (mInput->KeyDown(SDL_SCANCODE_UP) && !down) {


		Translate(-Vec2_Up * mMoveSpeed * mTimer->DeltaTime(), World);



	}
	else if (mInput->KeyDown(SDL_SCANCODE_DOWN) && !up) {


		Translate(Vec2_Up * mMoveSpeed * mTimer->DeltaTime(), World);


	}
	else
		SnakePart::StopAssMoving();